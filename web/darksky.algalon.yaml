# DARKSKY ALGALON CONFIGURATION FILE
#
# The purpose of Algalon is to provide a top-down verification system for all
# of Darksky. This is an alternative to a bottom-up approach where everything
# is automated to run standard.
#
# Algalon merges continuous integration with a dashboard and portal.
#
# Algalon shall run from the root of darksky, observing.

# Some metadata about the company
name        : Darksky.io
description : A research and development VPN
logo        : artwork/darksky.dark.svg
overview    : >
        "At the beginning of the 21st century, Darksky Corporation had become
        the largest commercial entity in the United States. Nine out of every
        ten homes contain its products. Its political and financial influence
        is felt everywhere.  In public, it is the world's leading supplier of
        computer technology, medical products, and healthcare. Unknown, even to
        its own employees, its massive profits are generated by military
        technology, genetic experimentation and viral weaponry."

# Categories of test instances. Used to optionally sort widgets, provide
# aggregate health.
categories:

      - name     : Applications
        synopsis : "User-level application services"
        icon     : fa-cloud

      - name     : Humans
        synopsis : "Pathetic humans that serve the great hive mind That is Darksky. All hail Darksky!"
        icon     : fa-users

      - name     : Services
        synopsis : "Infrastructure support network services"
        icon     : fa-gears

      - name     : Servers
        synopsis : "Dedicated servers, continental and residential"
        icon     : fa-sitemap

      - name     : Projects
        synopsis : "All active Darksky projects and statistics"
        icon     : fa-flask

      - name     : Corporation
        synopsis : "Tracking Darksky stock price and news"
        icon     : fa-usd

      - name     : Maintenance
        synopsis : "Garbage collection, synchronisation, etc"
        icon     : fa-wrench


# Test module instances, for static targets
# All tests must inherit from the base class which defines the minimum
# interface for running tests, results and metadata. As a minimum, name and
# module is required. Interval normally has a default, and can be chosen from:
#
#   * minutely
#   * hourly
#   * daily
#   * weekly
#   * monthly
#
#   Test widget data is organised flat, and keyed by an id generated from the
#   hash of the name, module and category.
#
#   If no category is specified, it defaults to 'Other.' If there is only one
#   category, the UI may omit categorisation.
#
#   At the moment, weighting is not applied to test failures. This is in the
#   hope that natural dependencies result in cascade failures. For example, if
#   a server goes down, it will probably take some services with it, increasing
#   the serverity of the failure; unless there is massive redundancy installed
#   by Frill.
tests:.

# SERVERS
- name        : chell.darksky.io
  category    : Servers
  definition  : Continental gateway
  synopsis    : >
        Long description of this server and how we use it.
  module      : ping

- name        : aperture.darksky.io
  category    : Servers
  definition  : Primary Virtualisation server
  synopsis    : >
        Long description of this server and how we use it.
  module      : ping

- name        : blackmesa.darksky.io
  category    : Servers
  definition  : Continental gateway
  synopsis    : >
        Long description of this server and how we use it.
  module      : ping

- name        : snowstorm.darksky.io
  category    : Servers
  definition  : Residential gateway for naggie
  synopsis    : >
        Long description of this server and how we use it.
  module      : ping

- name        : nelson.darksky.io
  category    : Servers
  definition  : Residential gateway for Jimjibone
  synopsis    : >
        Long description of this server and how we use it.
  module      : ping


- name        : navcom.darksky.io
  category    : Servers
  definition  : Residential gateway for Frill
  synopsis    : >
        Long description of this server and how we use it.
  module      : ping


# APPS
- name        : SABnzbdplus
  category    : Apps
  definition  : Usenet binary downloader
  synopsis    : >
        Long description of this service and how we use it.
  module      : HTTPconnect
  url         : 'http://usenet/'


- name        : Boards
  definition  : Discourse based discussion area
  synopsis    : >
        Long description of this service and how we use it.
  module      : HTTPconnect
  url         : 'http://boards/'

# MAINTENANCE
# Scripts for garbage collection, sync, backup, etc.
# It is preferable to execute an independent, dedicated script with no arguments.
- name        : Soundcloud downloader
  description : Synchronise user favorites from soundcloud
  synopsis    : >
        Long description
  module      : execute
  command     : scripts/rip-soundcloud.sh
  args        : 
  interval    : daily

- name        : Replicate published binaries
  description : 
  synopsis    : >
        Long description
  module      : execute
  command     : scripts/replicate-archive.py
  args        : 
  interval    : daily

- name        : Archive projects
  description : 
  synopsis    : >
        Long description
  module      : execute
  command     : zip
  args        : ['-FS','rq','/srv/archive/darksky.zip']
  interval    : daily


# Enumerators create test instances automatically at server start and
# periodically. For dynamic targets which may change, such as projects and
# humans.
enumerators:

# hooks into the internal API. EG: to post event messages
hooks:
